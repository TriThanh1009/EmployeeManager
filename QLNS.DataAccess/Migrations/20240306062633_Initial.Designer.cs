// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLNS.DataAccess;

#nullable disable

namespace QLNS.DataAccess.Migrations
{
    [DbContext(typeof(QLNSDbContext))]
    [Migration("20240306062633_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QLNS.Entity.Entities.Allowance", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Money")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Allowance", (string)null);

                    b.HasData(
                        new
                        {
                            ID = "1",
                            Money = 300000,
                            Name = "Tiền ăn"
                        },
                        new
                        {
                            ID = "2",
                            Money = 500000,
                            Name = "Tiền xăng"
                        });
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Day", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("IDLB")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Months")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("IDLB");

                    b.ToTable("DayOfHoliday", (string)null);

                    b.HasData(
                        new
                        {
                            ID = "1",
                            Days = 30,
                            IDLB = "3",
                            Months = 4,
                            Name = "30/4"
                        },
                        new
                        {
                            ID = "2",
                            Days = 1,
                            IDLB = "3",
                            Months = 5,
                            Name = "1/5"
                        },
                        new
                        {
                            ID = "3",
                            Days = 20,
                            IDLB = "2",
                            Months = 11,
                            Name = "20/11"
                        },
                        new
                        {
                            ID = "4",
                            Days = 2,
                            IDLB = "3",
                            Months = 9,
                            Name = "2/9"
                        },
                        new
                        {
                            ID = "5",
                            Days = 1,
                            IDLB = "3",
                            Months = 1,
                            Name = "1/1"
                        });
                });

            modelBuilder.Entity("QLNS.Entity.Entities.DescriptionRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankRoleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("RankRoleID");

                    b.ToTable("Description Role", (string)null);
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Employees", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CIC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DOB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 3, 6, 13, 26, 32, 959, DateTimeKind.Local).AddTicks(2641));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SalaryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Sex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("URLImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.HasIndex("SalaryID");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            ID = "1",
                            Account = "admin",
                            Active = 1,
                            Address = "Texas",
                            CIC = "000001",
                            DOB = new DateTime(2004, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyen",
                            LastName = "Dang",
                            MiddleName = "Jonny",
                            NumberPhone = "111",
                            Password = "123456",
                            SalaryID = "1",
                            Sex = 1,
                            URLImage = ""
                        },
                        new
                        {
                            ID = "2",
                            Account = "admin",
                            Active = 1,
                            Address = "New York",
                            CIC = "000002",
                            DOB = new DateTime(2002, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyen",
                            LastName = "Pug",
                            MiddleName = "Khoa",
                            NumberPhone = "222",
                            Password = "admin",
                            SalaryID = "2",
                            Sex = 1,
                            URLImage = ""
                        },
                        new
                        {
                            ID = "3",
                            Account = "admin",
                            Active = 1,
                            Address = "Thailand",
                            CIC = "000002",
                            DOB = new DateTime(2002, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyen",
                            LastName = "Thanh",
                            MiddleName = "Tri",
                            NumberPhone = "222",
                            Password = "admin",
                            SalaryID = "2",
                            Sex = 1,
                            URLImage = ""
                        },
                        new
                        {
                            ID = "4",
                            Account = "admin",
                            Active = 1,
                            Address = "New York",
                            CIC = "000002",
                            DOB = new DateTime(2002, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Tran",
                            LastName = "Thien",
                            MiddleName = "Minh",
                            NumberPhone = "2211232",
                            Password = "admin",
                            SalaryID = "2",
                            Sex = 0,
                            URLImage = ""
                        },
                        new
                        {
                            ID = "5",
                            Account = "admin",
                            Active = 1,
                            Address = "Dubai",
                            CIC = "000002",
                            DOB = new DateTime(2002, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bui",
                            LastName = "Tgabg",
                            MiddleName = "Manh",
                            NumberPhone = "212322",
                            Password = "admin",
                            SalaryID = "2",
                            Sex = 0,
                            URLImage = ""
                        });
                });

            modelBuilder.Entity("QLNS.Entity.Entities.LabourContract", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ContractSigninDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContractTerm")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Labour Contract", (string)null);
                });

            modelBuilder.Entity("QLNS.Entity.Entities.LabourHour", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Factor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Labour Hour", (string)null);

                    b.HasData(
                        new
                        {
                            ID = "1",
                            Factor = 1,
                            Name = "Ngày Thường"
                        },
                        new
                        {
                            ID = "2",
                            Factor = 2,
                            Name = "Ngày Lễ Nhỏ"
                        },
                        new
                        {
                            ID = "3",
                            Factor = 4,
                            Name = "Ngày Lễ "
                        });
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Position", b =>
                {
                    b.Property<string>("IDposition")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDposition");

                    b.ToTable("Position", (string)null);

                    b.HasData(
                        new
                        {
                            IDposition = "1",
                            Name = "IT"
                        },
                        new
                        {
                            IDposition = "2",
                            Name = "Kế toán"
                        },
                        new
                        {
                            IDposition = "3",
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Rank", b =>
                {
                    b.Property<string>("IDrank")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RankRoleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IDrank");

                    b.HasIndex("RankRoleID");

                    b.ToTable("Rank", (string)null);

                    b.HasData(
                        new
                        {
                            IDrank = "1",
                            Name = "Nhân viên",
                            RankRoleID = "1"
                        },
                        new
                        {
                            IDrank = "2",
                            Name = "Trưởng phòng",
                            RankRoleID = "2"
                        },
                        new
                        {
                            IDrank = "3",
                            Name = "Phó phòng",
                            RankRoleID = "2"
                        },
                        new
                        {
                            IDrank = "4",
                            Name = "Tổ trưởng",
                            RankRoleID = "2"
                        });
                });

            modelBuilder.Entity("QLNS.Entity.Entities.RankRole", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rank Role", (string)null);

                    b.HasData(
                        new
                        {
                            ID = "1",
                            Name = "Nhan Vien Binh Thuong"
                        },
                        new
                        {
                            ID = "2",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Rewards", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Reward", (string)null);
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Salary", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Money")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PositionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RankID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("PositionID");

                    b.HasIndex("RankID");

                    b.ToTable("Salary", (string)null);

                    b.HasData(
                        new
                        {
                            ID = "1",
                            Money = 80000m,
                            PositionID = "1",
                            RankID = "1"
                        },
                        new
                        {
                            ID = "2",
                            Money = 100000m,
                            PositionID = "1",
                            RankID = "2"
                        },
                        new
                        {
                            ID = "3",
                            Money = 70000m,
                            PositionID = "1",
                            RankID = "3"
                        },
                        new
                        {
                            ID = "4",
                            Money = 75000m,
                            PositionID = "1",
                            RankID = "4"
                        },
                        new
                        {
                            ID = "5",
                            Money = 50000m,
                            PositionID = "2",
                            RankID = "1"
                        },
                        new
                        {
                            ID = "6",
                            Money = 110000m,
                            PositionID = "2",
                            RankID = "2"
                        },
                        new
                        {
                            ID = "7",
                            Money = 80000m,
                            PositionID = "2",
                            RankID = "3"
                        },
                        new
                        {
                            ID = "8",
                            Money = 70000m,
                            PositionID = "2",
                            RankID = "4"
                        },
                        new
                        {
                            ID = "9",
                            Money = 60000m,
                            PositionID = "3",
                            RankID = "1"
                        },
                        new
                        {
                            ID = "10",
                            Money = 100000m,
                            PositionID = "3",
                            RankID = "2"
                        },
                        new
                        {
                            ID = "11",
                            Money = 950000m,
                            PositionID = "3",
                            RankID = "3"
                        },
                        new
                        {
                            ID = "12",
                            Money = 700000m,
                            PositionID = "3",
                            RankID = "4"
                        });
                });

            modelBuilder.Entity("QLNS.Entity.RelationShips.AllowanceRules", b =>
                {
                    b.Property<string>("AllowanceID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AllowanceID", "EmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("AllowanceRules", (string)null);
                });

            modelBuilder.Entity("QLNS.Entity.RelationShips.EmployeesWithAllowances", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AllowanceID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("AllowanceID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Employee With Allowance", (string)null);
                });

            modelBuilder.Entity("QLNS.Entity.RelationShips.WorkHour", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("EmployeesID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HourCheckin")
                        .HasColumnType("int");

                    b.Property<int>("HourCheckout")
                        .HasColumnType("int");

                    b.Property<string>("LBDID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MinuteCheckin")
                        .HasColumnType("int");

                    b.Property<int>("MinuteCheckout")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeesID");

                    b.HasIndex("LBDID");

                    b.ToTable("Work Hour", (string)null);
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Day", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.LabourHour", "LabourHour")
                        .WithMany("Days")
                        .HasForeignKey("IDLB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LabourHour");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.DescriptionRole", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.RankRole", "RankRole")
                        .WithMany("Description")
                        .HasForeignKey("RankRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RankRole");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Employees", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.Salary", "Salary")
                        .WithMany("Employees")
                        .HasForeignKey("SalaryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.LabourContract", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.Employees", "Employess")
                        .WithMany("LabourContracts")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employess");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Rank", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.RankRole", "Roles")
                        .WithMany("Rank")
                        .HasForeignKey("RankRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Rewards", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.Employees", "Employees")
                        .WithMany("Rewards")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Salary", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.Position", "Position")
                        .WithMany("Salaries")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLNS.Entity.Entities.Rank", "Rank")
                        .WithMany("Salaries")
                        .HasForeignKey("RankID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("QLNS.Entity.RelationShips.AllowanceRules", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.Allowance", "Allowance")
                        .WithMany("Rules")
                        .HasForeignKey("AllowanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLNS.Entity.Entities.Employees", "Employee")
                        .WithMany("Rules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allowance");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("QLNS.Entity.RelationShips.EmployeesWithAllowances", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.Allowance", "Allowance")
                        .WithMany("EWA")
                        .HasForeignKey("AllowanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLNS.Entity.Entities.Employees", "Employess")
                        .WithMany("EWA")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allowance");

                    b.Navigation("Employess");
                });

            modelBuilder.Entity("QLNS.Entity.RelationShips.WorkHour", b =>
                {
                    b.HasOne("QLNS.Entity.Entities.Employees", "Employess")
                        .WithMany("workHours")
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLNS.Entity.Entities.LabourHour", "Labour")
                        .WithMany("workHours")
                        .HasForeignKey("LBDID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employess");

                    b.Navigation("Labour");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Allowance", b =>
                {
                    b.Navigation("EWA");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Employees", b =>
                {
                    b.Navigation("EWA");

                    b.Navigation("LabourContracts");

                    b.Navigation("Rewards");

                    b.Navigation("Rules");

                    b.Navigation("workHours");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.LabourHour", b =>
                {
                    b.Navigation("Days");

                    b.Navigation("workHours");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Position", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Rank", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.RankRole", b =>
                {
                    b.Navigation("Description");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("QLNS.Entity.Entities.Salary", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
